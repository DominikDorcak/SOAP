
package KOPR.parkovanie.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ParkovanieService", targetNamespace = "http://parkovanie/", wsdlLocation = "http://localhost:9000/Parkovanie?wsdl")
public class ParkovanieService
    extends Service
{

    private final static URL PARKOVANIESERVICE_WSDL_LOCATION;
    private final static WebServiceException PARKOVANIESERVICE_EXCEPTION;
    private final static QName PARKOVANIESERVICE_QNAME = new QName("http://parkovanie/", "ParkovanieService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:9000/Parkovanie?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PARKOVANIESERVICE_WSDL_LOCATION = url;
        PARKOVANIESERVICE_EXCEPTION = e;
    }

    public ParkovanieService() {
        super(__getWsdlLocation(), PARKOVANIESERVICE_QNAME);
    }

    public ParkovanieService(WebServiceFeature... features) {
        super(__getWsdlLocation(), PARKOVANIESERVICE_QNAME, features);
    }

    public ParkovanieService(URL wsdlLocation) {
        super(wsdlLocation, PARKOVANIESERVICE_QNAME);
    }

    public ParkovanieService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PARKOVANIESERVICE_QNAME, features);
    }

    public ParkovanieService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ParkovanieService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns Parkovanie
     */
    @WebEndpoint(name = "ParkovaniePort")
    public Parkovanie getParkovaniePort() {
        return super.getPort(new QName("http://parkovanie/", "ParkovaniePort"), Parkovanie.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Parkovanie
     */
    @WebEndpoint(name = "ParkovaniePort")
    public Parkovanie getParkovaniePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://parkovanie/", "ParkovaniePort"), Parkovanie.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PARKOVANIESERVICE_EXCEPTION!= null) {
            throw PARKOVANIESERVICE_EXCEPTION;
        }
        return PARKOVANIESERVICE_WSDL_LOCATION;
    }

    public static void main(String[] args) {
        ParkovanieService parkovanieService = new ParkovanieService();
        Parkovanie port = parkovanieService.getParkovaniePort();
        System.out.println(port.zaparkuj(1,"BA-KOPR4"));
        System.out.println(port.zaparkuj(1,"BA-KOPR5"));
        System.out.println(port.zaparkuj(2,"BA-KOPR6"));
        System.out.println(port.zaparkuj(1,"BA-KOPR7"));
        System.out.println(port.odparkuj(12));
        System.out.println(port.zistiPlnost());

    }
}
